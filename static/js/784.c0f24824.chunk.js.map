{"version":3,"file":"static/js/784.c0f24824.chunk.js","mappings":"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","sources":["components/RegisterForm/RegisterForm.styled.js","components/RegisterForm/RegisterForm.js","pages/RegisterPage.js"],"sourcesContent":["import { Form, Field, ErrorMessage } from 'formik';\nimport styled from 'styled-components';\n\nexport const RegForm = styled(Form)`\n  max-width: 400px;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  gap: ${p => p.theme.spacing(5)};\n  margin: 0 auto ${p => p.theme.spacing(10)};\n`;\n\nexport const RegLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: ${p => p.theme.spacing(1)};\n`;\n\nexport const RegField = styled(Field)`\n  border-radius: ${p => p.theme.radii.md};\n  border: 1px solid ${p => p.theme.colors.blue};\n  padding: ${p => p.theme.spacing(2)} ${p => p.theme.spacing(4)};\n`;\n\nexport const RegError = styled(ErrorMessage)`\n  color: red;\n  font-size: 14px;\n`;\n\nexport const RegBtn = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: ${p => p.theme.spacing(2)};\n  width: ${p => p.theme.spacing(40)};\n  height: ${p => p.theme.spacing(10)};\n  margin: 0 auto;\n  background-color: ${p => p.theme.colors.blue};\n  color: ${p => p.theme.colors.white};\n  border: none;\n  border-radius: ${p => p.theme.radii.md};\n  transition: all 300ms linear;\n\n  &:hover,\n  &:focus {\n    background-color: ${p => p.theme.colors.lightblue};\n    color: ${p => p.theme.colors.blue};\n    font-weight: 700;\n    box-shadow: 3px 3px 15px 1px ${p => p.theme.colors.shadowblue};\n    -webkit-box-shadow: 3px 3px 15px 1px ${p => p.theme.colors.shadowblue};\n    -moz-box-shadow: 3px 3px 15px 1px ${p => p.theme.colors.shadowblue};\n  }\n`;\n","import { useDispatch } from 'react-redux';\n\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport toast from 'react-hot-toast';\nimport { register } from '../../redux/auth/operations';\nimport {\n  RegBtn,\n  RegError,\n  RegField,\n  RegForm,\n  RegLabel,\n} from './RegisterForm.styled';\n\nconst registerSchema = Yup.object().shape({\n  name: Yup.string()\n    .trim()\n    .matches(\n      /^[a-zA-Zа-яА-Я'. -]+$/,\n      'Name may contain only letters, apostrophe, dot, dash and spaces. For example Jane Dou'\n    )\n    .required('Required'),\n  email: Yup.string()\n    .trim()\n    .email('Please enter a valid email! For example jane@mail.com')\n    .required('Required'),\n  password: Yup.string()\n    .trim()\n    .min(7, 'Too Short!')\n    .matches(\n      /^[a-zA-Z0-9]+$/,\n      'Password may only contain letters of the English alphabet and numbers.. For example Qwerty1'\n    )\n    .required('Required'),\n});\n\nconst defaultValues = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const onRegisterSubmit = (values, action) => {\n    dispatch(register(values))\n      .then(() => {\n        toast.success('Registration was successful!');\n      })\n      .catch(error => {\n        toast.error('Oops, something went wrong! Try again later.');\n        console.error('Registration failed:', error);\n      })\n      .finally(() => {\n        action.resetForm();\n      });\n  };\n\n  return (\n    <Formik\n      initialValues={defaultValues}\n      onSubmit={onRegisterSubmit}\n      validationSchema={registerSchema}\n    >\n      <RegForm autoComplete=\"off\">\n        <RegLabel htmlFor=\"name\">\n          Username\n          <RegField\n            autoComplete=\"on\"\n            type=\"text\"\n            id=\"name\"\n            name=\"name\"\n            required\n          />\n          <RegError name=\"name\" component=\"span\" />\n        </RegLabel>\n        <RegLabel htmlFor=\"email\">\n          Email\n          <RegField\n            autoComplete=\"on\"\n            type=\"email\"\n            id=\"email\"\n            name=\"email\"\n            required\n          />\n          <RegError name=\"email\" component=\"span\" />\n        </RegLabel>\n        <RegLabel htmlFor=\"password\">\n          Password\n          <RegField type=\"password\" id=\"password\" name=\"password\" required />\n          <RegError name=\"password\" component=\"span\" />\n        </RegLabel>\n        <RegBtn type=\"submit\">Register</RegBtn>\n      </RegForm>\n    </Formik>\n  );\n};\n","import { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nexport default function Register() {\n  return (\n    <>\n      <RegisterForm />\n    </>\n  );\n}\n"],"names":["RegForm","styled","Form","_templateObject","_taggedTemplateLiteral","p","theme","spacing","RegLabel","_templateObject2","RegField","Field","_templateObject3","radii","md","colors","blue","RegError","ErrorMessage","_templateObject4","RegBtn","_templateObject5","white","lightblue","shadowblue","registerSchema","Yup","shape","name","trim","matches","required","email","password","min","defaultValues","RegisterForm","dispatch","useDispatch","_jsx","Formik","initialValues","onSubmit","values","action","register","then","toast","catch","error","console","finally","resetForm","validationSchema","children","_jsxs","autoComplete","htmlFor","type","id","component","Register","_Fragment"],"sourceRoot":""}