{"version":3,"file":"static/js/947.8658ad74.chunk.js","mappings":"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","sources":["components/Helper/Titles.js","redux/contacts/selectors.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.js","components/SearchBar/SearchBar.styled.js","components/SearchBar/SearchBar.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.js","pages/ContactsPage.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const TitleWrap = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: ${p => p.theme.spacing(5)};\n  margin-bottom: ${p => p.theme.spacing(5)};\n`;\n\nexport const MainTitle = styled.h1`\n  font-size: 40px;\n  font-weight: 700;\n`;\n\nexport const Title = styled.h2`\n  font-size: 28px;\n  font-weight: 500;\n`;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter)\n    );\n  }\n);\n","import {\n  Form as FormikForm,\n  Field as FormikField,\n  ErrorMessage as FormikError,\n} from 'formik';\nimport styled from 'styled-components';\n\nexport const Form = styled(FormikForm)`\n  max-width: 400px;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  gap: ${p => p.theme.spacing(5)};\n  margin: 0 auto ${p => p.theme.spacing(10)};\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: ${p => p.theme.spacing(1)};\n`;\n\nexport const LabelWrap = styled.span`\n  display: flex;\n  align-items: center;\n  gap: ${p => p.theme.spacing(2)};\n  font-size: 18;\n`;\n\nexport const Field = styled(FormikField)`\n  border-radius: ${p => p.theme.radii.md};\n  border: 1px solid ${p => p.theme.colors.blue};\n  padding: ${p => p.theme.spacing(2)} ${p => p.theme.spacing(4)};\n`;\n\nexport const ErrorMessage = styled(FormikError)`\n  color: red;\n  font-size: 14px;\n`;\n\nexport const AddBtn = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: ${p => p.theme.spacing(2)};\n  width: ${p => p.theme.spacing(40)};\n  height: ${p => p.theme.spacing(10)};\n  margin: 0 auto;\n  background-color: ${p => p.theme.colors.blue};\n  color: ${p => p.theme.colors.white};\n  border: none;\n  border-radius: ${p => p.theme.radii.md};\n  transition: all 300ms linear;\n\n  &:hover,\n  &:focus {\n    background-color: ${p => p.theme.colors.lightblue};\n    color: ${p => p.theme.colors.blue};\n    font-weight: 700;\n    box-shadow: 3px 3px 15px 1px ${p => p.theme.colors.shadowblue};\n    -webkit-box-shadow: 3px 3px 15px 1px ${p => p.theme.colors.shadowblue};\n    -moz-box-shadow: 3px 3px 15px 1px ${p => p.theme.colors.shadowblue};\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\n\nimport { selectContacts } from '../../redux/contacts/selectors';\nimport { addContact } from '../../redux/contacts/operations';\n\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport toast from 'react-hot-toast';\n\nimport { BsFillPersonFill } from 'react-icons/bs';\nimport { BsTelephoneFill } from 'react-icons/bs';\nimport { BsFillPersonPlusFill } from 'react-icons/bs';\n\nimport {\n  Form,\n  Label,\n  LabelWrap,\n  Field,\n  ErrorMessage,\n  AddBtn,\n} from './ContactForm.styled';\n\nconst сontactSchema = Yup.object().shape({\n  name: Yup.string()\n    .trim()\n    .matches(\n      /^[a-zA-Zа-яА-Я'. -]+$/,\n      'Name may contain only letters, apostrophe, dot, dash and spaces. For example Jane Dou'\n    )\n    .required('Required'),\n  number: Yup.string()\n    .trim()\n    .min(7, 'Too Short!')\n    .matches(\n      /^[0-9+ ()-]+$/,\n      'Please enter a valid phone number. For example 111-11-11'\n    )\n    .required('Required'),\n});\n\nexport const ContactForm = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const onAddContact = (newContact, { resetForm }) => {\n    const isExistName = contacts.some(\n      ({ name }) => name.toLowerCase() === newContact.name.toLowerCase()\n    );\n\n    const isExistPhone = contacts.some(\n      ({ number }) => number === newContact.number\n    );\n\n    if (isExistName) {\n      return toast.error(`${newContact.name}: is already in contacts`);\n    }\n\n    if (isExistPhone) {\n      return toast.error(`${newContact.number}: is already in contacts`);\n    }\n\n    dispatch(addContact(newContact));\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        number: '',\n      }}\n      validationSchema={сontactSchema}\n      onSubmit={onAddContact}\n    >\n      <Form autoComplete=\"off\">\n        <Label htmlFor=\"name\">\n          <LabelWrap>\n            <BsFillPersonFill size=\"18\" />\n            Name\n          </LabelWrap>\n          <Field\n            autoComplete=\"off\"\n            type=\"text\"\n            id=\"name\"\n            name=\"name\"\n            placeholder=\"Jane Doe\"\n            required\n          />\n          <ErrorMessage name=\"name\" component=\"span\" />\n        </Label>\n        <Label htmlFor=\"number\">\n          <LabelWrap>\n            <BsTelephoneFill size=\"16\" />\n            Phone\n          </LabelWrap>\n          <Field\n            autoComplete=\"off\"\n            type=\"tel\"\n            id=\"number\"\n            name=\"number\"\n            placeholder=\"111-11-11\"\n            required\n          />\n          <ErrorMessage name=\"number\" component=\"span\" />\n        </Label>\n        <AddBtn type=\"submit\">\n          Add contact\n          <BsFillPersonPlusFill size=\"16\" />\n        </AddBtn>\n      </Form>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\n\nexport const SearchLabel = styled.label`\n  max-width: 400px;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  gap: ${p => p.theme.spacing(2)};\n  margin: 0 auto ${p => p.theme.spacing(5)};\n`;\n\nexport const SearchWrap = styled.span`\n  display: flex;\n  gap: ${p => p.theme.spacing(2)};\n  align-items: center;\n`;\n\nexport const SearchInput = styled.input`\n  border-radius: ${p => p.theme.radii.md};\n  border: 1px solid ${p => p.theme.colors.blue};\n  padding: ${p => p.theme.spacing(2)} ${p => p.theme.spacing(4)};\n`;\n","import { useDispatch, useSelector } from 'react-redux';\n\nimport { BsSearch } from 'react-icons/bs';\nimport { SearchLabel, SearchWrap, SearchInput } from './SearchBar.styled';\n\nimport { selectFilter } from '../../redux/contacts/selectors';\nimport { setFilter } from '../../redux/contacts/filterSlice';\n\nexport const SearchBar = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const changeFilter = evt => {\n    dispatch(setFilter(evt.target.value.toLowerCase().trim()));\n  };\n\n  return (\n    <SearchLabel>\n      <SearchWrap>\n        <BsSearch size=\"16\" /> Find contacts by name\n      </SearchWrap>\n      <SearchInput\n        name=\"filter\"\n        autoComplete=\"off\"\n        type=\"text\"\n        value={filter}\n        onChange={changeFilter}\n        placeholder=\"search\"\n      />\n    </SearchLabel>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ContactsList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: ${p => p.theme.spacing(4)};\n  max-width: 400px;\n  width: 100%;\n  margin: 0 auto;\n\n  @media (max-width: 768px) {\n    gap: ${p => p.theme.spacing(8)};\n  }\n`;\n\nexport const ContactsListItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n    gap: ${p => p.theme.spacing(2)};\n  }\n`;\n\nexport const ItemWrap = styled.div`\n  display: flex;\n  gap: ${p => p.theme.spacing(4)};\n\n  @media (max-width: 460px) {\n    flex-direction: column;\n    gap: ${p => p.theme.spacing(1)};\n  }\n`;\n\nexport const ContactsWrap = styled.span`\n  font-size: 18px;\n`;\n\nexport const DeleteBtn = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: ${p => p.theme.spacing(2)};\n  width: ${p => p.theme.spacing(30)};\n  height: ${p => p.theme.spacing(10)};\n  background-color: ${p => p.theme.colors.blue};\n  color: ${p => p.theme.colors.white};\n  border: none;\n  border-radius: ${p => p.theme.radii.md};\n  transition: all 300ms linear;\n\n  &:hover,\n  &:focus {\n    background-color: ${p => p.theme.colors.lightblue};\n    color: ${p => p.theme.colors.blue};\n    font-weight: 700;\n    box-shadow: 3px 3px 15px 1px ${p => p.theme.colors.shadowblue};\n    -webkit-box-shadow: 3px 3px 15px 1px ${p => p.theme.colors.shadowblue};\n    -moz-box-shadow: 3px 3px 15px 1px ${p => p.theme.colors.shadowblue};\n  }\n`;\n\nexport const NoContacts = styled.p`\n  font-size: 20px;\n  text-align: center;\n`;\n","// import { useDispatch, useSelector } from 'react-redux';\n\n// import {\n//   selectVisibleContacts,\n//   selectError,\n//   selectIsLoading,\n// } from '../../redux/contacts/selectors';\n// import { deleteContact } from '../../redux/contacts/operations';\n\n// import { Loader } from '../Loader/Loader';\n\n// import { BsFillPersonDashFill } from 'react-icons/bs';\n// import {\n//   ContactsList,\n//   ContactsListItem,\n//   ItemWrap,\n//   ContactsWrap,\n//   DeleteBtn,\n//   NoContacts,\n// } from './ContactList.styled';\n\n// export const ContactList = () => {\n//   const visibleContacts = useSelector(selectVisibleContacts);\n//   const error = useSelector(selectError);\n//   const isLoading = useSelector(selectIsLoading);\n//   const dispatch = useDispatch();\n\n//   const onDelete = e => {\n//     dispatch(deleteContact(e.currentTarget.id));\n//   };\n\n//    if (!visibleContacts.length) {\n//     return (\n//       <NoContacts>No contacts added yet.</NoContacts>\n//           );\n//   }\n\n//   return (\n//     <>\n//       {isLoading && <Loader />}\n//       {error && <p>{error}</p>}\n//       <ContactsList>\n//         {visibleContacts.map(({ name, number, id }) => {\n//           return (\n//             <ContactsListItem key={id}>\n//               <ItemWrap>\n//                 <ContactsWrap>{name}:</ContactsWrap>\n//                 <ContactsWrap>{number}</ContactsWrap>\n//               </ItemWrap>\n//               <DeleteBtn type=\"button\" id={id} onClick={onDelete}>\n//                 Delete\n//                 <BsFillPersonDashFill size=\"16\" />\n//               </DeleteBtn>\n//             </ContactsListItem>\n//           );\n//         })}\n//       </ContactsList>\n//     </>\n//   );\n// };\n\nimport { useDispatch, useSelector } from 'react-redux';\n// import { useEffect } from 'react';\n\nimport {\n  selectContacts,\n  selectError,\n  selectIsLoading,\n  selectFilter,\n} from '../../redux/contacts/selectors';\nimport { deleteContact } from '../../redux/contacts/operations';\n\nimport { Loader } from '../Loader/Loader';\n\nimport { BsFillPersonDashFill } from 'react-icons/bs';\nimport {\n  ContactsList,\n  ContactsListItem,\n  ItemWrap,\n  ContactsWrap,\n  DeleteBtn,\n  NoContacts,\n} from './ContactList.styled';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const filteredContacts = useSelector(selectFilter);\n  // const visibleContacts = useSelector(selectVisibleContacts);\n  const error = useSelector(selectError);\n  const isLoading = useSelector(selectIsLoading);\n  const dispatch = useDispatch();\n\n  // useEffect(() => {\n  //   dispatch(fetchContacts());\n  // }, [dispatch]);\n\n  const isExistContacts = () => {\n    if (!filteredContacts || filteredContacts === '') {\n      return contacts;\n    }\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filteredContacts)\n    );\n  };\n\n  const visibleContacts = isExistContacts();\n\n  if (!visibleContacts?.length) {\n    return <NoContacts>No contacts added yet.</NoContacts>;\n  }\n\n  // if (!visibleContacts?.length) {\n  //   return (\n  //     <NoContacts>There is no such name in your contacts list.</NoContacts>\n  //   );\n  // }\n  const onDeleteContact = evt => {\n    dispatch(deleteContact(evt.currentTarget.id));\n  };\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {error && <p>{error}</p>}\n      <ContactsList>\n        {visibleContacts.map(({ id, name, number }) => {\n          return (\n            <ContactsListItem key={id}>\n              <ItemWrap>\n                <ContactsWrap>{name}:</ContactsWrap>\n                <ContactsWrap>{number}</ContactsWrap>\n              </ItemWrap>\n              <DeleteBtn type=\"button\" id={id} onClick={onDeleteContact}>\n                Delete\n                <BsFillPersonDashFill size=\"16\" />\n              </DeleteBtn>\n            </ContactsListItem>\n          );\n        })}\n      </ContactsList>\n    </>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fetchContacts } from '../redux/contacts/operations';\n\nimport { BsCardList } from 'react-icons/bs';\nimport { BsBook } from 'react-icons/bs';\n\nimport { MainSection, Wrapper } from '../components/Helper/Layout';\nimport { TitleWrap, MainTitle, Title } from '../components/Helper/Titles';\nimport { ContactForm } from '../components/ContactForm/ContactForm';\nimport { SearchBar } from '../components/SearchBar/SearchBar';\nimport { ContactList } from '../components/ContactList/ContactList';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <MainSection>\n      <Wrapper>\n        <TitleWrap>\n          <BsBook size=\"40\" />\n          <MainTitle>Phonebook</MainTitle>\n        </TitleWrap>\n        <ContactForm />\n\n        <TitleWrap>\n          <BsCardList size=\"28\" />\n          <Title>Contacts</Title>\n        </TitleWrap>\n        <SearchBar />\n        <ContactList />\n      </Wrapper>\n    </MainSection>\n  );\n}\n"],"names":["TitleWrap","styled","_templateObject","_taggedTemplateLiteral","p","theme","spacing","MainTitle","_templateObject2","Title","_templateObject3","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","createSelector","contact","name","toLowerCase","includes","Form","FormikForm","Label","LabelWrap","Field","FormikField","_templateObject4","radii","md","colors","blue","ErrorMessage","FormikError","_templateObject5","AddBtn","_templateObject6","white","lightblue","shadowblue","сontactSchema","Yup","shape","trim","matches","required","number","min","ContactForm","useSelector","dispatch","useDispatch","_jsx","Formik","initialValues","validationSchema","onSubmit","newContact","_ref","resetForm","isExistName","some","_ref2","isExistPhone","_ref3","toast","concat","addContact","children","_jsxs","autoComplete","htmlFor","BsFillPersonFill","size","type","id","placeholder","component","BsTelephoneFill","BsFillPersonPlusFill","SearchLabel","SearchWrap","SearchInput","SearchBar","BsSearch","value","onChange","evt","setFilter","target","ContactsList","ContactsListItem","ItemWrap","ContactsWrap","DeleteBtn","NoContacts","ContactList","filteredContacts","visibleContacts","length","onDeleteContact","deleteContact","currentTarget","_Fragment","Loader","map","onClick","BsFillPersonDashFill","Contacts","useEffect","fetchContacts","MainSection","Wrapper","BsBook","BsCardList"],"sourceRoot":""}