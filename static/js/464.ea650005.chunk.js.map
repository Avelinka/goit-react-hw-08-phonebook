{"version":3,"file":"static/js/464.ea650005.chunk.js","mappings":"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","sources":["components/LoginForm/LoginForm.styled.js","components/LoginForm/LoginForm.js","pages/LoginPage.js"],"sourcesContent":["import { Form, Field, ErrorMessage } from 'formik';\nimport styled from 'styled-components';\n\nexport const LogForm = styled(Form)`\n  max-width: 400px;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  gap: ${p => p.theme.spacing(5)};\n  margin: 0 auto ${p => p.theme.spacing(10)};\n`;\n\nexport const LogLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: ${p => p.theme.spacing(1)};\n`;\n\nexport const LogField = styled(Field)`\n  border-radius: ${p => p.theme.radii.md};\n  border: 1px solid ${p => p.theme.colors.blue};\n  padding: ${p => p.theme.spacing(2)} ${p => p.theme.spacing(4)};\n`;\n\nexport const LogError = styled(ErrorMessage)`\n  color: red;\n  font-size: 14px;\n`;\n\nexport const LogBtn = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: ${p => p.theme.spacing(2)};\n  width: ${p => p.theme.spacing(40)};\n  height: ${p => p.theme.spacing(10)};\n  margin: 0 auto;\n  background-color: ${p => p.theme.colors.blue};\n  color: ${p => p.theme.colors.white};\n  border: none;\n  border-radius: ${p => p.theme.radii.md};\n  transition: all 300ms linear;\n\n  &:hover,\n  &:focus {\n    background-color: ${p => p.theme.colors.lightblue};\n    color: ${p => p.theme.colors.blue};\n    font-weight: 700;\n    box-shadow: 3px 3px 15px 1px ${p => p.theme.colors.shadowblue};\n    -webkit-box-shadow: 3px 3px 15px 1px ${p => p.theme.colors.shadowblue};\n    -moz-box-shadow: 3px 3px 15px 1px ${p => p.theme.colors.shadowblue};\n  }\n`;\n","import { useDispatch } from 'react-redux';\n\nimport { Formik } from 'formik';\nimport toast from 'react-hot-toast';\nimport { logIn } from '../../redux/auth/operations';\nimport {\n  LogBtn,\n  LogError,\n  LogField,\n  LogForm,\n  LogLabel,\n} from './LoginForm.styled';\n\nconst defaultValues = {\n  email: '',\n  password: '',\n};\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const onLoginSubmit = (values, action) => {\n    dispatch(logIn(values))\n      .then(() => {\n        toast.success('Login was successful!');\n      })\n      .catch(error => {\n        toast.error('Oops, something went wrong! Try again.');\n        console.error('Login failed:', error);\n      })\n      .finally(() => {\n        action.resetForm();\n      });\n  };\n\n  return (\n    <Formik initialValues={defaultValues} onSubmit={onLoginSubmit}>\n      <LogForm>\n        <LogLabel htmlFor=\"email\">\n          Email\n          <LogField\n            autoComplete=\"on\"\n            type=\"email\"\n            id=\"email\"\n            name=\"email\"\n            required\n          />\n          <LogError name=\"email\" component=\"span\" />\n        </LogLabel>\n        <LogLabel htmlFor=\"password\">\n          Password\n          <LogField type=\"password\" id=\"password\" name=\"password\" required />\n          <LogError name=\"password\" component=\"span\" />\n        </LogLabel>\n        <LogBtn type=\"submit\">Log In</LogBtn>\n      </LogForm>\n    </Formik>\n  );\n};\n","import { LoginForm } from 'components/LoginForm/LoginForm';\n\nexport default function Login() {\n  return (\n    <>\n      <LoginForm />\n    </>\n  );\n}\n"],"names":["LogForm","styled","Form","_templateObject","_taggedTemplateLiteral","p","theme","spacing","LogLabel","_templateObject2","LogField","Field","_templateObject3","radii","md","colors","blue","LogError","ErrorMessage","_templateObject4","LogBtn","_templateObject5","white","lightblue","shadowblue","defaultValues","email","password","LoginForm","dispatch","useDispatch","_jsx","Formik","initialValues","onSubmit","values","action","logIn","then","toast","catch","error","console","finally","resetForm","children","_jsxs","htmlFor","autoComplete","type","id","name","required","component","Login","_Fragment"],"sourceRoot":""}